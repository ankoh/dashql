name: 'main'
on:
    push:
    pull_request:
        branches:
            - main

jobs:
    lib_wasm:
        name: Library / WASM
        runs-on: ubuntu-22.04
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - name: Setup flatc
              uses: ./.github/actions/setup-flatc
            - name: Setup wasi-sdk
              uses: ./.github/actions/setup-wasi-sdk
            - name: Setup wabt
              uses: ./.github/actions/setup-wabt
            - name: Setup binaryen
              uses: ./.github/actions/setup-binaryen

            - name: Generate Flatbuffer files
              shell: bash
              run: ./scripts/generate_proto.sh

            - name: Build WASM module
              shell: bash
              env:
                  BINARYEN_BIN: /opt/binaryen/bin
                  WABT_BIN: /opt/wabt/bin
                  WASI_SDK_PREFIX: /opt/wasi
                  WASI_SYSROOT: /opt/wasi/share/wasi-sysroot
                  WASI_CMAKE_TOOLCHAIN: /opt/wasi/share/cmake/wasi-sdk.cmake
              run: |
                  ./scripts/build_parser_wasm.sh Release

            - uses: actions/upload-artifact@v3
              with:
                  name: flatsql_parser_wasm
                  path: ./packages/flatsql/build/wasm/Release/flatsql.wasm
                  retention-days: 1

    lib_native_debug:
        name: Library / Native / Debug
        runs-on: ubuntu-22.04
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - name: Setup llvm
              uses: ./.github/actions/setup-llvm

            - name: Setup flatc
              uses: ./.github/actions/setup-flatc

            - name: Generate Flatbuffer files
              shell: bash
              run: ./scripts/generate_proto.sh

            - name: Compile library
              shell: bash
              env:
                  LIB_SOURCE_DIR: ./packages/flatsql
                  LIB_DEBUG_DIR: ./packages/flatsql/build/native/Debug
              run: |
                  cmake -S ${LIB_SOURCE_DIR} -B ${LIB_DEBUG_DIR} \
                    -DCMAKE_C_COMPILER=${{env.LLVM_PATH}}/bin/clang \
                    -DCMAKE_CXX_COMPILER=${{env.LLVM_PATH}}/bin/clang++ \
                    -DCMAKE_BUILD_TYPE=Debug \
                    -DCMAKE_EXPORT_COMPILE_COMMANDS=1 \
                    -DCODE_COVERAGE=1
                  ln -sf ${LIB_DEBUG_DIR}/compile_commands.json ${LIB_SOURCE_DIR}/compile_commands.json
                  cmake --build ${LIB_DEBUG_DIR} --parallel $(nproc --all)

            - name: Test library
              shell: bash
              env:
                  LIB_SOURCE_DIR: ./packages/flatsql
                  LIB_DEBUG_DIR: ./packages/flatsql/build/native/Debug
              run: |
                  ${LIB_DEBUG_DIR}/tester --source ${LIB_SOURCE_DIR}

            - name: Merge coverage data
              shell: bash
              env:
                  LIB_COVERAGE_DIR: ./packages/flatsql/build/coverage
              run: |
                  mkdir -p ${LIB_COVERAGE_DIR}
                  ${{env.LLVM_PATH}}/bin/llvm-profdata merge -output=${LIB_COVERAGE_DIR}/coverage.prof -instr default.profraw

            - name: Build coverage report
              shell: bash
              env:
                  LIB_DEBUG_DIR: ./packages/flatsql/build/native/Debug
                  LIB_COVERAGE_DIR: ./packages/flatsql/build/coverage
              run: |
                  ${{env.LLVM_PATH}}/bin/llvm-cov export \
                    --instr-profile ${LIB_COVERAGE_DIR}/coverage.prof \
                    --format lcov \
                    --ignore-filename-regex='.*/build/native/Debug/.*' \
                    --ignore-filename-regex='.*/utf8proc/.*' \
                    --ignore-filename-regex='.*/proto/proto_generated.h' \
                    --ignore-filename-regex='.*/.*\.list' \
                    ${LIB_DEBUG_DIR}/tester > ${LIB_COVERAGE_DIR}/lcov.info

            - name: Upload coverage report
              uses: coverallsapp/github-action@v2
              with:
                  github-token: ${{secrets.GITHUB_TOKEN}}
                  path-to-lcov: ./packages/flatsql/build/coverage/lcov.info

    lib_js:
        name: Library / Javascript
        runs-on: ubuntu-22.04
        needs:
            - lib_wasm
            - lib_native_debug
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - uses: actions/download-artifact@v3
              with:
                  name: flatsql_parser_wasm
                  path: ./packages/flatsql/build/wasm/Release/flatsql.wasm

            - name: Setup flatc
              uses: ./.github/actions/setup-flatc

            - name: Generate Flatbuffer files
              shell: bash
              run: ./scripts/generate_proto.sh

            - name: Install npm dependencies
              shell: bash
              run: |
                  mkdir -p ./lib/build/wasm/release ./reports
                  yarn install --frozen-lockfile

            - name: Build @ankoh/flatsql
              shell: bash
              run: |
                  yarn workspace @ankoh/flatsql build:release

            - name: Test @ankoh/flatsql
              shell: bash
              run: |
                  yarn workspace @ankoh/flatsql test
