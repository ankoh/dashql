name: Main
on:
    push:
        branches-ignore:
            - 'renovate/*'
    pull_request:
        branches:
            - 'main'

jobs:
    core_wasm:
        strategy:
            matrix:
                build_type: ['o0', 'o3']

        name: Build Core / WASM / ${{ matrix.build_type }}
        runs-on: ubuntu-22.04
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - name: Setup flatc
              uses: ./.github/actions/setup-flatc
            - name: Setup wasi-sdk
              uses: ./.github/actions/setup-wasi-sdk
            - name: Setup wabt
              uses: ./.github/actions/setup-wabt
            - name: Setup binaryen
              uses: ./.github/actions/setup-binaryen

            - name: Generate Flatbuffer files
              shell: bash
              run: ./scripts/generate_flatbuf.sh

            - name: Build WASM module
              shell: bash
              env:
                  BINARYEN_BIN: /opt/binaryen/bin
                  WABT_BIN: /opt/wabt/bin
                  WASI_SDK_PREFIX: /opt/wasi
                  WASI_SYSROOT: /opt/wasi/share/wasi-sysroot
                  WASI_CMAKE_TOOLCHAIN: /opt/wasi/share/cmake/wasi-sdk.cmake
              run: |
                  ./scripts/build_parser_wasm.sh ${{ matrix.build_type }}

            - uses: actions/upload-artifact@v4
              with:
                  name: sqlynx_core_wasm_${{ matrix.build_type }}
                  path: ./packages/sqlynx-core/build/wasm/${{ matrix.build_type }}/sqlynx.wasm
                  retention-days: 1

    core_native:
        strategy:
            matrix:
                build_type: ['o0', 'o2']

        name: Build Core / Native / ${{ matrix.build_type }}
        runs-on: ubuntu-22.04
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - name: Setup llvm
              uses: ./.github/actions/setup-llvm

            - name: Setup flatc
              uses: ./.github/actions/setup-flatc

            - name: Generate Flatbuffer files
              shell: bash
              run: ./scripts/generate_flatbuf.sh

            - name: Compile library
              shell: bash
              env:
                  SQLYNX_SOURCE_DIR: ./packages/sqlynx-core
                  SQLYNX_BUILD_DIR: ./packages/sqlynx-core/build/native/${{ matrix.build_type }}
              run: |
                  cmake -S ${SQLYNX_SOURCE_DIR} -B ${SQLYNX_BUILD_DIR} \
                  -DCMAKE_C_COMPILER=${{env.LLVM_PATH}}/bin/clang \
                  -DCMAKE_CXX_COMPILER=${{env.LLVM_PATH}}/bin/clang++ \
                  -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                  -DCMAKE_EXPORT_COMPILE_COMMANDS=1 \
                  -DCODE_COVERAGE=1
                  ln -sf ${SQLYNX_BUILD_DIR}/compile_commands.json ${SQLYNX_SOURCE_DIR}/compile_commands.json
                  cmake --build ${SQLYNX_BUILD_DIR} --parallel $(nproc --all)

            - name: Test library
              shell: bash
              env:
                  SQLYNX_SOURCE_DIR: ./packages/sqlynx
                  SQLYNX_BUILD_DIR: ./packages/sqlynx-core/build/native/${{ matrix.build_type }}
              run: |
                  ${SQLYNX_BUILD_DIR}/tester --source ${SQLYNX_SOURCE_DIR}

            - name: Run pipeline benchmarks
              if: matrix.build_type == 'o2'
              shell: bash
              env:
                  SQLYNX_SOURCE_DIR: ./packages/sqlynx
                  SQLYNX_BUILD_DIR: ./packages/sqlynx-core/build/native/${{ matrix.build_type }}
              run: |
                  ${SQLYNX_BUILD_DIR}/benchmark_pipeline

            - name: Run layout benchmarks
              if: matrix.build_type == 'o2'
              shell: bash
              env:
                  SQLYNX_SOURCE_DIR: ./packages/sqlynx
                  SQLYNX_BUILD_DIR: ./packages/sqlynx-core/build/native/${{ matrix.build_type }}
              run: |
                  ${SQLYNX_BUILD_DIR}/benchmark_layout

            - name: Merge coverage data
              shell: bash
              env:
                  SQLYNX_COVERAGE_DIR: ./packages/sqlynx-core/build/coverage
              run: |
                  mkdir -p ${SQLYNX_COVERAGE_DIR}
                  ${{env.LLVM_PATH}}/bin/llvm-profdata merge -output=${SQLYNX_COVERAGE_DIR}/coverage.prof -instr default.profraw

            - name: Build coverage report
              shell: bash
              env:
                  SQLYNX_BUILD_DIR: ./packages/sqlynx-core/build/native/${{ matrix.build_type }}
                  SQLYNX_COVERAGE_DIR: ./packages/sqlynx-core/build/coverage
              run: |
                  ${{env.LLVM_PATH}}/bin/llvm-cov export \
                  --instr-profile ${SQLYNX_COVERAGE_DIR}/coverage.prof \
                  --format lcov \
                  --ignore-filename-regex='.*/build/native/${{ matrix.build_type }}/.*' \
                  --ignore-filename-regex='.*/utf8proc/.*' \
                  --ignore-filename-regex='.*/proto/proto_generated.h' \
                  --ignore-filename-regex='.*/.*\.list' \
                  ${SQLYNX_BUILD_DIR}/tester > ${SQLYNX_COVERAGE_DIR}/lcov.info

            - uses: actions/upload-artifact@v4
              with:
                  name: sqlynx_coverage_native_${{ matrix.build_type }}
                  path: ./packages/sqlynx-core/build/coverage/lcov.info
                  retention-days: 1

    platform:
        name: Build Platform / ${{ matrix.system.name }}
        runs-on: ${{ matrix.system.os }}
        strategy:
            fail-fast: true
            matrix:
                node_version:
                    - 18
                system:
                    - os: ubuntu-22.04
                      target: x86_64-unknown-linux-gnu
                      name: ubuntu_x64
                    - os: windows-2022
                      target: x86_64-pc-windows-msvc
                      name: windows_x64
                    - os: macos-12
                      target: x86_64-apple-darwin
                      name: darwin_x64
        steps:
            - uses: actions/checkout@v4

            - name: Setup Cargo Cache
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ${{ runner.os }}-cargo-native-${{ matrix.system.os }}-${{ matrix.system.target }}-${{ hashFiles('Cargo.lock') }}
                  restore-keys: ${{ runner.os }}-cargo-native-${{ matrix.system.os }}-${{ matrix.system.target }}-

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node_version }}
                  registry-url: 'https://registry.npmjs.org'

            - name: Setup Rust
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  target: ${{ matrix.system.target }}
                  override: true

            - name: Install npm dependencies
              run: yarn install --frozen-lockfile

            - name: Build Platform / o0
              run: yarn workspace @ankoh/sqlynx-platform build:o0

            - name: Build Platform / o3
              run: yarn workspace @ankoh/sqlynx-platform build:o3

            - name: Test Platform
              run: yarn workspace @ankoh/sqlynx-platform test

            - uses: actions/upload-artifact@v4
              with:
                  name: sqlynx_platform_${{ matrix.system.name }}
                  path: ./packages/sqlynx-platform/dist
                  retention-days: 1

    hyper_service_proto:
        name: Build Hyper Service Protocol
        runs-on: ubuntu-22.04
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - name: Install npm dependencies
              shell: bash
              run: |
                  yarn install --frozen-lockfile

            - name: Generate Protobuf files
              shell: bash
              run: |
                  ./node_modules/.bin/buf generate 
                  yarn workspace @ankoh/hyper-service build

            - uses: actions/upload-artifact@v4
              with:
                  name: hyper_service_proto
                  path: ./packages/hyper-service/dist
                  retention-days: 1

    core_js:
        name: Build Core
        runs-on: ubuntu-22.04
        needs:
            - core_wasm
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - uses: actions/download-artifact@v4
              with:
                  name: sqlynx_core_wasm_o3
                  path: ./packages/sqlynx-core/build/wasm/o3/

            - name: Setup flatc
              uses: ./.github/actions/setup-flatc

            - name: Generate Flatbuffer files
              shell: bash
              run: ./scripts/generate_flatbuf.sh

            - name: Install npm dependencies
              shell: bash
              run: |
                  yarn install --frozen-lockfile

            - name: Build @ankoh/sqlynx-core
              shell: bash
              run: |
                  yarn workspace @ankoh/sqlynx-core build:o3

            - name: Test @ankoh/sqlynx-core
              shell: bash
              run: |
                  yarn workspace @ankoh/sqlynx-core test:coverage

            - uses: actions/upload-artifact@v4
              with:
                  name: sqlynx_core
                  path: ./packages/sqlynx-core-api/dist
                  retention-days: 1

            - uses: actions/upload-artifact@v4
              with:
                  name: sqlynx_coverage_js
                  path: ./packages/sqlynx-core-api/coverage/lcov.info
                  retention-days: 1

    pwa:
        name: Build App / Web
        runs-on: ubuntu-22.04
        needs:
            - core_js
            - hyper_service_proto
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - uses: actions/download-artifact@v4
              with:
                  name: hyper_service_proto
                  path: ./packages/hyper-service/dist

            - uses: actions/download-artifact@v4
              with:
                  name: sqlynx_core
                  path: ./packages/sqlynx-core-api/dist

            - name: Install npm dependencies
              shell: bash
              run: |
                  yarn install --frozen-lockfile

            - name: Build @ankoh/sqlynx-app
              shell: bash
              run: |
                  export SQLYNX_APP_URL=https://sqlynx.app
                  yarn workspace @ankoh/sqlynx-app pwa:build:release

            - name: Test @ankoh/sqlynx-app
              shell: bash
              run: |
                  yarn workspace @ankoh/sqlynx-app pwa:test

            - uses: actions/upload-artifact@v4
              with:
                  name: sqlynx_pwa
                  path: ./packages/sqlynx-app/build/pwa/release
                  retention-days: 1

    pwa_reloc:
        name: Build App / Web / Relocatable
        runs-on: ubuntu-22.04
        needs:
            - core_js
            - hyper_service_proto
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - uses: actions/download-artifact@v4
              with:
                  name: hyper_service_proto
                  path: ./packages/hyper-service/dist

            - uses: actions/download-artifact@v4
              with:
                  name: sqlynx_core
                  path: ./packages/sqlynx-core-api/dist

            - name: Install npm dependencies
              shell: bash
              run: |
                  yarn install --frozen-lockfile

            - name: Build @ankoh/sqlynx-app
              shell: bash
              run: |
                  export SQLYNX_APP_URL=https://sqlynx.app
                  yarn workspace @ankoh/sqlynx-app pwa:build:relreloc

            - name: Test @ankoh/sqlynx-app
              shell: bash
              run: |
                  yarn workspace @ankoh/sqlynx-app pwa:test

            - uses: actions/upload-artifact@v4
              with:
                  name: sqlynx_pwa_reloc
                  path: ./packages/sqlynx-app/build/pwa/relreloc
                  retention-days: 1

    electron:
        name: Build App / ${{ matrix.system.name }}
        runs-on: ${{ matrix.system.os }}
        strategy:
            fail-fast: true
            matrix:
                node_version:
                    - 18
                system:
                    - os: ubuntu-22.04
                      target: x86_64-unknown-linux-gnu
                      name: ubuntu_x64
                    - os: windows-2022
                      target: x86_64-pc-windows-msvc
                      name: windows_x64
                    - os: macos-12
                      target: x86_64-apple-darwin
                      name: darwin_x64
        needs:
            - core_js
            - pwa_reloc
            - platform
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - uses: actions/download-artifact@v4
              with:
                  name: hyper_service_proto
                  path: ./packages/hyper-service/dist

            - uses: actions/download-artifact@v4
              with:
                  name: sqlynx_core
                  path: ./packages/sqlynx-core-api/dist

            - uses: actions/download-artifact@v4
              with:
                  name: sqlynx_pwa_reloc
                  path: ./packages/sqlynx-app/build/pwa/relreloc

            - uses: actions/download-artifact@v4
              with:
                  name: sqlynx_platform_${{ matrix.system.name }}
                  path: ./packages/sqlynx-platform/dist

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node_version }}
                  registry-url: 'https://registry.npmjs.org'

            - name: Install npm dependencies
              shell: bash
              run: |
                  yarn install --frozen-lockfile

            - name: Build electron app
              shell: bash
              run: |
                  export SQLYNX_APP_URL=https://sqlynx.app
                  yarn workspace @ankoh/sqlynx-app electron:build:release

            - name: Package app for snap store
              if: matrix.system.target == 'ubuntu-22.04'
              shell: bash
              run: |
                  yarn workspace @ankoh/sqlynx-app electron:package:snap

    pages:
        name: Deploy GitHub Page
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-22.04
        needs:
            - pwa
            - electron
            # Most test cases are in the native library. Don't update
            # the deployed webpage if the native tests failed.
            - core_native
        permissions:
            contents: read
            pages: write
            id-token: write
        steps:
            - uses: actions/download-artifact@v4
              with:
                  name: sqlynx_pwa
                  path: ./page

            - uses: actions/upload-pages-artifact@v3
              with:
                  path: ./page

            - uses: actions/deploy-pages@v4

    coverage:
        name: Build Coverage Report
        runs-on: ubuntu-22.04
        needs:
            - core_js
            - core_native
            - platform
            - pwa
            - electron
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - uses: actions/download-artifact@v4
              with:
                  name: sqlynx_coverage_native_o0
                  path: ./packages/sqlynx-core/build/coverage/

            - uses: actions/download-artifact@v4
              with:
                  name: sqlynx_coverage_js
                  path: ./packages/sqlynx-core-api/coverage/

            - name: Upload coverage report
              uses: coverallsapp/github-action@v2
              with:
                  github-token: ${{secrets.GITHUB_TOKEN}}
