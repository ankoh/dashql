%type <NodeVector> sql_any_name;
%type <NodeVector> sql_any_operator;
%type <NodeVector> sql_attrs;
%type <NodeVector> sql_character_with_length;
%type <NodeVector> sql_character_without_length;
%type <NodeVector> sql_cte_list;
%type <NodeVector> sql_expr_list;
%type <NodeVector> sql_extract_list;
%type <NodeVector> sql_for_locking_clause;
%type <NodeVector> sql_for_locking_items;
%type <NodeVector> sql_frame_extent;
%type <NodeVector> sql_from_clause;
%type <NodeVector> sql_from_list;
%type <NodeVector> sql_func_application;
%type <NodeVector> sql_func_arg_list;
%type <NodeVector> sql_func_expr_common_subexpr;
%type <NodeVector> sql_func_name;
%type <NodeVector> sql_group_by_list;
%type <NodeVector> sql_group_clause;
%type <NodeVector> sql_indirection;
%type <NodeVector> sql_join_qual;
%type <NodeVector> sql_joined_table;
%type <NodeVector> sql_limit_clause;
%type <NodeVector> sql_locked_rels_list;
%type <NodeVector> sql_name_list;
%type <NodeVector> sql_offset_clause;
%type <NodeVector> sql_opt_array_bounds;
%type <NodeVector> sql_opt_existing_window_name;
%type <NodeVector> sql_opt_for_locking_clause;
%type <NodeVector> sql_opt_frame_clause;
%type <NodeVector> sql_opt_indirection;
%type <NodeVector> sql_opt_name_list;
%type <NodeVector> sql_opt_partition_clause;
%type <NodeVector> sql_opt_select_limit;
%type <NodeVector> sql_opt_target_list;
%type <NodeVector> sql_opt_type_modifiers;
%type <NodeVector> sql_overlay_list;
%type <NodeVector> sql_position_list;
%type <NodeVector> sql_qualified_name_list;
%type <NodeVector> sql_relation_expr;
%type <NodeVector> sql_row;
%type <NodeVector> sql_rowsfrom_list;
%type <NodeVector> sql_sample_count;
%type <NodeVector> sql_select_clause;
%type <NodeVector> sql_select_limit;
%type <NodeVector> sql_select_no_parens;
%type <NodeVector> sql_select_stmt;
%type <NodeVector> sql_select_with_parens;
%type <NodeVector> sql_simple_select;
%type <NodeVector> sql_sortby_list;
%type <NodeVector> sql_substr_list;
%type <NodeVector> sql_table_func_element_list;
%type <NodeVector> sql_tablesample_entry;
%type <NodeVector> sql_target_list;
%type <NodeVector> sql_trim_list;
%type <NodeVector> sql_type_list;
%type <NodeVector> sql_values_clause;
%type <NodeVector> sql_when_clause_list;
%type <NodeVector> sql_window_clause;
%type <NodeVector> sql_window_definition_list;
%type <NodeVector> sql_with_clause;
%type <bool> sql_opt_asymmetric;
%type <bool> sql_opt_varying;
%type <proto::JoinType> sql_join_outer;
%type <proto::JoinType> sql_join_type;
%type <proto::Node> sql_a_expr;
%type <proto::Node> sql_a_expr_const;
%type <proto::Node> sql_alias_clause;
%type <proto::Node> sql_all_op;
%type <proto::Node> sql_all_or_distinct;
%type <proto::Node> sql_b_expr;
%type <proto::Node> sql_bit;
%type <proto::Node> sql_bit_with_length;
%type <proto::Node> sql_bit_without_length;
%type <proto::Node> sql_c_expr;
%type <proto::Node> sql_case_arg;
%type <proto::Node> sql_case_default;
%type <proto::Node> sql_case_expr;
%type <proto::Node> sql_character;
%type <proto::Node> sql_col_id;
%type <proto::Node> sql_col_id_or_string;
%type <proto::Node> sql_col_label_or_string;
%type <proto::Node> sql_columnref;
%type <proto::Node> sql_common_table_expr;
%type <proto::Node> sql_const_bit;
%type <proto::Node> sql_const_character;
%type <proto::Node> sql_const_datetime;
%type <proto::Node> sql_const_typename;
%type <proto::Node> sql_distinct_clause;
%type <proto::Node> sql_extract_arg;
%type <proto::Node> sql_filter_clause;
%type <proto::Node> sql_for_locking_item;
%type <proto::Node> sql_for_locking_strength;
%type <proto::Node> sql_frame_bound;
%type <proto::Node> sql_func_alias_clause;
%type <proto::Node> sql_func_arg_expr;
%type <proto::Node> sql_func_expr;
%type <proto::Node> sql_func_expr_windowless;
%type <proto::Node> sql_func_table;
%type <proto::Node> sql_generic_type;
%type <proto::Node> sql_group_by_item;
%type <proto::Node> sql_having_clause;
%type <proto::Node> sql_i_or_f_const;
%type <proto::Node> sql_in_expr;
%type <proto::Node> sql_indirection_el;
%type <proto::Node> sql_interval_second;
%type <proto::Node> sql_into_clause;
%type <proto::Node> sql_math_op;
%type <proto::Node> sql_numeric;
%type <proto::Node> sql_opt_alias_clause;
%type <proto::Node> sql_opt_all_clause;
%type <proto::Node> sql_opt_asc_desc;
%type <proto::Node> sql_opt_col_def_list;
%type <proto::Node> sql_opt_collate_clause;
%type <proto::Node> sql_opt_interval;
%type <proto::Node> sql_opt_nowait_or_skip;
%type <proto::Node> sql_opt_nulls_order;
%type <proto::Node> sql_opt_ordinality;
%type <proto::Node> sql_opt_repeatable_clause;
%type <proto::Node> sql_opt_sample_func;
%type <proto::Node> sql_opt_slice_bound;
%type <proto::Node> sql_opt_sort_clause;
%type <proto::Node> sql_opt_tablesample_clause;
%type <proto::Node> sql_opt_temp_table_name;
%type <proto::Node> sql_opt_timezone;
%type <proto::Node> sql_over_clause;
%type <proto::Node> sql_overlay_placing;
%type <proto::Node> sql_param_ref;
%type <proto::Node> sql_preparable_stmt;
%type <proto::Node> sql_qual_all_op;
%type <proto::Node> sql_qual_op;
%type <proto::Node> sql_qualified_name;
%type <proto::Node> sql_rowsfrom_item;
%type <proto::Node> sql_sample_clause;
%type <proto::Node> sql_select_fetch_first_value;
%type <proto::Node> sql_select_limit_value;
%type <proto::Node> sql_select_offset_value;
%type <proto::Node> sql_simple_typename;
%type <proto::Node> sql_sort_clause;
%type <proto::Node> sql_sortby;
%type <proto::Node> sql_subquery_op;
%type <proto::Node> sql_subquery_quantifier;
%type <proto::Node> sql_substr_for;
%type <proto::Node> sql_substr_from;
%type <proto::Node> sql_table_func_element;
%type <proto::Node> sql_table_ref;
%type <proto::Node> sql_tablesample_clause;
%type <proto::Node> sql_target_el;
%type <proto::Node> sql_type_function_name;
%type <proto::Node> sql_typename;
%type <proto::Node> sql_when_clause;
%type <proto::Node> sql_where_clause;
%type <proto::Node> sql_window_definition;
%type <proto::Node> sql_window_specification;
%type <proto::Node> sql_within_group_clause;
%type <proto::NumericType> sql_opt_float;
