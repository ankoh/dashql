// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file sqlynx/oauth.proto (package sqlynx, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum sqlynx.OAuthFlowVariant
 */
export enum OAuthFlowVariant {
  /**
   * / Setup OAuth using a web opener
   *
   * @generated from enum value: WEB_OPENER = 0;
   */
  WEB_OPENER = 0,

  /**
   * / Setup OAuth using a native deep link
   *
   * @generated from enum value: NATIVE_LINK = 1;
   */
  NATIVE_LINK = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(OAuthFlowVariant)
proto3.util.setEnumType(OAuthFlowVariant, "sqlynx.OAuthFlowVariant", [
  { no: 0, name: "WEB_OPENER" },
  { no: 1, name: "NATIVE_LINK" },
]);

/**
 * @generated from enum sqlynx.OAuthProvider
 */
export enum OAuthProvider {
  /**
   * / The Salesforce OAuth provider
   *
   * @generated from enum value: SALESFORCE = 0;
   */
  SALESFORCE = 0,
}
// Retrieve enum metadata with: proto3.getEnumType(OAuthProvider)
proto3.util.setEnumType(OAuthProvider, "sqlynx.OAuthProvider", [
  { no: 0, name: "SALESFORCE" },
]);

/**
 * @generated from message sqlynx.OAuthState
 */
export class OAuthState extends Message<OAuthState> {
  /**
   * / The OAuth provider
   *
   * @generated from field: sqlynx.OAuthProvider oauth_provider = 3;
   */
  oauthProvider = OAuthProvider.SALESFORCE;

  /**
   * / The OAuth flow variant
   *
   * @generated from field: sqlynx.OAuthFlowVariant oauth_flow_variant = 2;
   */
  oauthFlowVariant = OAuthFlowVariant.WEB_OPENER;

  constructor(data?: PartialMessage<OAuthState>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sqlynx.OAuthState";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 3, name: "oauth_provider", kind: "enum", T: proto3.getEnumType(OAuthProvider) },
    { no: 2, name: "oauth_flow_variant", kind: "enum", T: proto3.getEnumType(OAuthFlowVariant) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OAuthState {
    return new OAuthState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OAuthState {
    return new OAuthState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OAuthState {
    return new OAuthState().fromJsonString(jsonString, options);
  }

  static equals(a: OAuthState | PlainMessage<OAuthState> | undefined, b: OAuthState | PlainMessage<OAuthState> | undefined): boolean {
    return proto3.util.equals(OAuthState, a, b);
  }
}

