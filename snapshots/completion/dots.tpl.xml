<completion-snapshots>
    <completion-snapshot name="dots_qualified_table" what="complete a qualified table">
        <editor>
            <input>
                create table dbname.schemaname.foo(a int);
                select * from dbname.schemaname.
            </input>
        </editor>
        <cursor>
            <search text="from dbname.schemaname." index="23" />
        </cursor>
        <completions limit="3" />
    </completion-snapshot>
    <completion-snapshot name="dots_column_0" what="complete an alias with qualified table">
        <editor>
            <input>
                create table dbname.schemaname.foo(a int);
                select from dbname.schemaname.foo f where f.
            </input>
        </editor>
        <cursor>
            <search text="f." index="2" />
        </cursor>
        <completions limit="3" />
    </completion-snapshot>
    <completion-snapshot name="dots_column_1" what="complete an alias with qualified table but default db">
        <editor>
            <input>
                create table schemaname.foo(a int);
                select from schemaname.foo f where f.
            </input>
        </editor>
        <cursor>
            <search text="f." index="2" />
        </cursor>
        <completions limit="3" />
    </completion-snapshot>
    <completion-snapshot name="dots_column_2" what="complete an alias with unqualified table">
        <editor>
            <input>
                create table foo(a int);
                select from foo f where f.
            </input>
        </editor>
        <cursor>
            <search text="f." index="2" />
        </cursor>
        <completions limit="3" />
    </completion-snapshot>
    <completion-snapshot name="dots_multiple_columns_0" what="complete multiple columns">
        <editor>
            <input>
                create table foo(a int, b int, c int);
                create table bar(d int, e int, f int);
                select from foo alias where alias.
            </input>
        </editor>
        <cursor>
            <search text="alias." index="6" />
        </cursor>
        <completions limit="3" />
    </completion-snapshot>
    <completion-snapshot name="dots_multiple_columns_1" what="complete multiple columns, multiple froms">
        <editor>
            <input>
                create table foo(a int, b int, c int);
                create table bar(d int, e int, f int);
                select from foo f, bar b where f.
            </input>
        </editor>
        <cursor>
            <search text="f." index="2" />
        </cursor>
        <completions limit="3" />
    </completion-snapshot>
    <completion-snapshot name="dots_multiple_columns_2" what="complete multiple columns, multiple froms, other table">
        <editor>
            <input>
                create table foo(a int, b int, c int);
                create table bar(d int, e int, f int);
                select from foo f, bar b where b.
            </input>
        </editor>
        <cursor>
            <search text="b." index="2" />
        </cursor>
        <completions limit="3" />
    </completion-snapshot>
    <completion-snapshot name="dots_limit" what="more table columns than limit">
        <editor>
            <input>
                create table foo(a int, b int, c int, d int, e int);
                select from foo f where f.
            </input>
        </editor>
        <cursor>
            <search text="f." index="2" />
        </cursor>
        <completions limit="3" />
    </completion-snapshot>
    <completion-snapshot name="dots_score_column_prefix_0" what="column names with matching prefix should score higher">
        <editor>
            <input>
                create table foo(apple int, juice int);
                select from foo f where f.ap
            </input>
        </editor>
        <cursor>
            <search text="f.ap" index="4" />
        </cursor>
        <completions limit="3" />
    </completion-snapshot>
</completion-snapshots>
