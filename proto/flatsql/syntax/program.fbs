include "flatsql/syntax/sql_syntax.fbs";

namespace flatsql.proto.syntax;

struct Location { offset: uint32; length: uint32; }

enum NodeType: uint16 {
    NONE = 0,

    BOOL,
    UI32,
    UI32_BITMAP,
    STRING_REF,
    ARRAY,

    ENUM_KEYS_,

    ENUM_SQL_CHARACTER_TYPE,
    ENUM_SQL_COLUMN_CONSTRAINT,
    ENUM_SQL_COMBINE_MODIFIER,
    ENUM_SQL_COMBINE_OPERATION,
    ENUM_SQL_CONSTRAINT_ATTRIBUTE,
    ENUM_SQL_CONST_TYPE,
    ENUM_SQL_EXPRESSION_OPERATOR,
    ENUM_SQL_EXTRACT_TARGET,
    ENUM_SQL_GROUP_BY_ITEM_TYPE,
    ENUM_SQL_INTERVAL_TYPE,
    ENUM_SQL_JOIN_TYPE,
    ENUM_SQL_KEY_ACTION_COMMAND,
    ENUM_SQL_KEY_ACTION_TRIGGER,
    ENUM_SQL_KEY_MATCH,
    ENUM_SQL_KNOWN_FUNCTION,
    ENUM_SQL_NUMERIC_TYPE,
    ENUM_SQL_ON_COMMIT_OPTION,
    ENUM_SQL_ORDER_DIRECTION,
    ENUM_SQL_ORDER_NULL_RULE,
    ENUM_SQL_ROW_LOCKING_BLOCK_BEHAVIOR,
    ENUM_SQL_ROW_LOCKING_STRENGTH,
    ENUM_SQL_SAMPLE_UNIT_TYPE,
    ENUM_SQL_SUBQUERY_QUANTIFIER,
    ENUM_SQL_TABLE_CONSTRAINT,
    ENUM_SQL_TEMP_TYPE,
    ENUM_SQL_TRIM_TARGET,
    ENUM_SQL_WINDOW_BOUND_DIRECTION,
    ENUM_SQL_WINDOW_BOUND_MODE,
    ENUM_SQL_WINDOW_EXCLUSION_MODE,
    ENUM_SQL_WINDOW_RANGE_MODE,

    OBJECT_KEYS_,

    OBJECT_DSON,

    OBJECT_FLATSQL_IMPORT,
    OBJECT_FLATSQL_FUNCTION_CALL,
    OBJECT_FLATSQL_DECLARE,
    OBJECT_FLATSQL_LOAD,
    OBJECT_FLATSQL_SET,
    OBJECT_FLATSQL_VIZ,
    OBJECT_FLATSQL_VIZ_COMPONENT,

    OBJECT_SQL_ALIAS,
    OBJECT_SQL_BIT_TYPE,
    OBJECT_SQL_CASE,
    OBJECT_SQL_CASE_CLAUSE,
    OBJECT_SQL_CHARACTER_TYPE,
    OBJECT_SQL_COLUMN_CONSTRAINT,
    OBJECT_SQL_COLUMN_DEF,
    OBJECT_SQL_COLUMN_REF,
    OBJECT_SQL_COMBINE,
    OBJECT_SQL_CONST_FUNCTION_CAST,
    OBJECT_SQL_CONST_INTERVAL_CAST,
    OBJECT_SQL_CONST_TYPE_CAST,
    OBJECT_SQL_CREATE,
    OBJECT_SQL_CREATE_AS,
    OBJECT_SQL_CTE,
    OBJECT_SQL_DEF_ARG,
    OBJECT_SQL_EXISTS_EXPRESSION,
    OBJECT_SQL_FUNCTION_ARG,
    OBJECT_SQL_FUNCTION_CAST_ARGS,
    OBJECT_SQL_FUNCTION_EXPRESSION,
    OBJECT_SQL_FUNCTION_EXTRACT_ARGS,
    OBJECT_SQL_FUNCTION_OVERLAY_ARGS,
    OBJECT_SQL_FUNCTION_POSITION_ARGS,
    OBJECT_SQL_FUNCTION_SUBSTRING_ARGS,
    OBJECT_SQL_FUNCTION_TABLE,
    OBJECT_SQL_FUNCTION_TREAT_ARGS,
    OBJECT_SQL_FUNCTION_TRIM_ARGS,
    OBJECT_SQL_GENERIC_OPTION,
    OBJECT_SQL_GENERIC_TYPE,
    OBJECT_SQL_GROUP_BY_ITEM,
    OBJECT_SQL_INDIRECTION,
    OBJECT_SQL_INDIRECTION_INDEX,
    OBJECT_SQL_INTERVAL_TYPE,
    OBJECT_SQL_INTO,
    OBJECT_SQL_JOINED_TABLE,
    OBJECT_SQL_KEY_ACTION,
    OBJECT_SQL_NARY_EXPRESSION,
    OBJECT_SQL_NUMERIC_TYPE,
    OBJECT_SQL_ORDER,
    OBJECT_SQL_PARAMETER_REF,
    OBJECT_SQL_QUALIFIED_NAME,
    OBJECT_SQL_QUALIFIED_OPERATOR,
    OBJECT_SQL_RELATION_EXPR,
    OBJECT_SQL_RESULT_TARGET,
    OBJECT_SQL_ROWSFROM_ITEM,
    OBJECT_SQL_ROW_LOCKING,
    OBJECT_SQL_SELECT,
    OBJECT_SQL_SELECT_EXPRESSION,
    OBJECT_SQL_SELECT_SAMPLE,
    OBJECT_SQL_SUBQUERY_EXPRESSION,
    OBJECT_SQL_TABLEREF,
    OBJECT_SQL_TABLEREF_SAMPLE,
    OBJECT_SQL_TABLE_CONSTRAINT,
    OBJECT_SQL_TIMESTAMP_TYPE,
    OBJECT_SQL_TIME_TYPE,
    OBJECT_SQL_TYPECAST_EXPRESSION,
    OBJECT_SQL_TYPENAME,
    OBJECT_SQL_TYPETEST_EXPRESSION,
    OBJECT_SQL_VIEW,
    OBJECT_SQL_WINDOW_BOUND,
    OBJECT_SQL_WINDOW_DEF,
    OBJECT_SQL_WINDOW_FRAME,
    OBJECT_SQL_WITH,
}

enum AttributeKey: uint16 {
    NONE = 0,

    SQL_KEYS_,

    SQL_ALIAS_COLUMN_DEFS,
    SQL_ALIAS_COLUMN_NAMES,
    SQL_ALIAS_NAME,
    SQL_BIT_TYPE_LENGTH,
    SQL_BIT_TYPE_VARYING,
    SQL_CASE_ARGUMENT,
    SQL_CASE_CLAUSES,
    SQL_CASE_CLAUSE_THEN,
    SQL_CASE_CLAUSE_WHEN,
    SQL_CASE_DEFAULT,
    SQL_CHARACTER_TYPE,
    SQL_CHARACTER_TYPE_LENGTH,
    SQL_COLUMN_CONSTRAINT_DEFINITION,
    SQL_COLUMN_CONSTRAINT_NAME,
    SQL_COLUMN_CONSTRAINT_NO_INHERIT,
    SQL_COLUMN_CONSTRAINT_TYPE,
    SQL_COLUMN_CONSTRAINT_VALUE,
    SQL_COLUMN_DEF_COLLATE,
    SQL_COLUMN_DEF_CONSTRAINTS,
    SQL_COLUMN_DEF_NAME,
    SQL_COLUMN_DEF_OPTIONS,
    SQL_COLUMN_DEF_TYPE,
    SQL_COLUMN_REF_PATH,
    SQL_COMBINE_INPUT,
    SQL_COMBINE_MODIFIER,
    SQL_COMBINE_OPERATION,
    SQL_CONST_CAST_FUNC_ARGS_LIST,
    SQL_CONST_CAST_FUNC_ARGS_ORDER,
    SQL_CONST_CAST_FUNC_NAME,
    SQL_CONST_CAST_INTERVAL,
    SQL_CONST_CAST_INTERVAL_PRECISION,
    SQL_CONST_CAST_TYPE,
    SQL_CONST_CAST_VALUE,
    SQL_CONST_TYPE,
    SQL_CONST_VALUE,
    SQL_CREATE_AS_COLUMNS,
    SQL_CREATE_AS_IF_NOT_EXISTS,
    SQL_CREATE_AS_NAME,
    SQL_CREATE_AS_ON_COMMIT,
    SQL_CREATE_AS_STATEMENT,
    SQL_CREATE_AS_TEMP,
    SQL_CREATE_AS_WITH_DATA,
    SQL_CREATE_TABLE_ELEMENTS,
    SQL_CREATE_TABLE_NAME,
    SQL_CREATE_TABLE_ON_COMMIT,
    SQL_CREATE_TABLE_TEMP,
    SQL_CTE_COLUMNS,
    SQL_CTE_NAME,
    SQL_CTE_STATEMENT,
    SQL_DEFINITION_ARG_KEY,
    SQL_DEFINITION_ARG_VALUE,
    SQL_EXISTS_EXPRESSION_STATEMENT,
    SQL_EXPRESSION_ARG0,
    SQL_EXPRESSION_ARG1,
    SQL_EXPRESSION_ARG2,
    SQL_EXPRESSION_ARGS,
    SQL_EXPRESSION_OPERATOR,
    SQL_EXPRESSION_POSTFIX,
    SQL_FUNCTION_ALL,
    SQL_FUNCTION_ARGUMENTS,
    SQL_FUNCTION_ARG_NAME,
    SQL_FUNCTION_ARG_VALUE,
    SQL_FUNCTION_CAST_ARGS,
    SQL_FUNCTION_CAST_TYPE,
    SQL_FUNCTION_CAST_VALUE,
    SQL_FUNCTION_DISTINCT,
    SQL_FUNCTION_EXTRACT_ARGS,
    SQL_FUNCTION_EXTRACT_INPUT,
    SQL_FUNCTION_EXTRACT_TARGET,
    SQL_FUNCTION_FILTER,
    SQL_FUNCTION_NAME,
    SQL_FUNCTION_ORDER,
    SQL_FUNCTION_OVER,
    SQL_FUNCTION_OVERLAY_ARGS,
    SQL_FUNCTION_OVERLAY_FOR,
    SQL_FUNCTION_OVERLAY_FROM,
    SQL_FUNCTION_OVERLAY_INPUT,
    SQL_FUNCTION_OVERLAY_PLACING,
    SQL_FUNCTION_POSITION_ARGS,
    SQL_FUNCTION_POSITION_INPUT,
    SQL_FUNCTION_POSITION_SEARCH,
    SQL_FUNCTION_SUBSTRING_ARGS,
    SQL_FUNCTION_SUBSTRING_FOR,
    SQL_FUNCTION_SUBSTRING_FROM,
    SQL_FUNCTION_SUBSTRING_INPUT,
    SQL_FUNCTION_TABLE_FUNCTION,
    SQL_FUNCTION_TABLE_ROWS_FROM,
    SQL_FUNCTION_TABLE_WITH_ORDINALITY,
    SQL_FUNCTION_TREAT_ARGS,
    SQL_FUNCTION_TREAT_TYPE,
    SQL_FUNCTION_TREAT_VALUE,
    SQL_FUNCTION_TRIM_ARGS,
    SQL_FUNCTION_TRIM_CHARACTERS,
    SQL_FUNCTION_TRIM_DIRECTION,
    SQL_FUNCTION_TRIM_INPUT,
    SQL_FUNCTION_VARIADIC,
    SQL_FUNCTION_WITHIN_GROUP,
    SQL_GENERIC_OPTION_KEY,
    SQL_GENERIC_OPTION_VALUE,
    SQL_GENERIC_TYPE_MODIFIERS,
    SQL_GENERIC_TYPE_NAME,
    SQL_GROUP_BY_ITEM_ARG,
    SQL_GROUP_BY_ITEM_ARGS,
    SQL_GROUP_BY_ITEM_TYPE,
    SQL_INDIRECTION_INDEX_LOWER_BOUND,
    SQL_INDIRECTION_INDEX_UPPER_BOUND,
    SQL_INDIRECTION_INDEX_VALUE,
    SQL_INDIRECTION_PATH,
    SQL_INDIRECTION_VALUE,
    SQL_INTERVAL_PRECISION,
    SQL_INTERVAL_TYPE,
    SQL_JOIN_INPUT,
    SQL_JOIN_ON,
    SQL_JOIN_TYPE,
    SQL_JOIN_USING,
    SQL_KEY_ACTION_COMMAND,
    SQL_KEY_ACTION_TRIGGER,
    SQL_NUMERIC_TYPE_BASE,
    SQL_NUMERIC_TYPE_MODIFIERS,
    SQL_ORDER_DIRECTION,
    SQL_ORDER_NULLRULE,
    SQL_ORDER_VALUE,
    SQL_PARAMETER_NAME,
    SQL_PARAMETER_PREFIX,
    SQL_QUALIFIED_NAME_CATALOG,
    SQL_QUALIFIED_NAME_INDEX,
    SQL_QUALIFIED_NAME_RELATION,
    SQL_QUALIFIED_NAME_SCHEMA,
    SQL_RESULT_TARGET_NAME,
    SQL_RESULT_TARGET_STAR,
    SQL_RESULT_TARGET_VALUE,
    SQL_ROWSFROM_ITEM_COLUMNS,
    SQL_ROWSFROM_ITEM_FUNCTION,
    SQL_ROW_LOCKING,
    SQL_ROW_LOCKING_BLOCK_BEHAVIOR,
    SQL_ROW_LOCKING_OF,
    SQL_ROW_LOCKING_STRENGTH,
    SQL_SAMPLE_COUNT_UNIT,
    SQL_SAMPLE_COUNT_VALUE,
    SQL_SAMPLE_FUNCTION,
    SQL_SAMPLE_REPEAT,
    SQL_SAMPLE_SEED,
    SQL_SELECT_ALL,
    SQL_SELECT_DISTINCT,
    SQL_SELECT_EXPRESSION_INDIRECTION,
    SQL_SELECT_EXPRESSION_STATEMENT,
    SQL_SELECT_FROM,
    SQL_SELECT_GROUPS,
    SQL_SELECT_HAVING,
    SQL_SELECT_INTO,
    SQL_SELECT_LIMIT,
    SQL_SELECT_LIMIT_ALL,
    SQL_SELECT_OFFSET,
    SQL_SELECT_ORDER,
    SQL_SELECT_ROW_LOCKING,
    SQL_SELECT_SAMPLE,
    SQL_SELECT_TABLE,
    SQL_SELECT_TARGETS,
    SQL_SELECT_VALUES,
    SQL_SELECT_WHERE,
    SQL_SELECT_WINDOWS,
    SQL_SELECT_WITH_CTES,
    SQL_SELECT_WITH_RECURSIVE,
    SQL_SUBQUERY_ARG0,
    SQL_SUBQUERY_ARG1,
    SQL_SUBQUERY_OPERATOR,
    SQL_SUBQUERY_QUANTIFIER,
    SQL_TABLEREF_ALIAS,
    SQL_TABLEREF_INHERIT,
    SQL_TABLEREF_LATERAL,
    SQL_TABLEREF_NAME,
    SQL_TABLEREF_SAMPLE,
    SQL_TABLEREF_TABLE,
    SQL_TABLE_CONSTRAINT_ARGUMENT,
    SQL_TABLE_CONSTRAINT_ATTRIBUTES,
    SQL_TABLE_CONSTRAINT_COLUMNS,
    SQL_TABLE_CONSTRAINT_DEFINITION,
    SQL_TABLE_CONSTRAINT_INDEX,
    SQL_TABLE_CONSTRAINT_KEY_ACTIONS,
    SQL_TABLE_CONSTRAINT_KEY_MATCH,
    SQL_TABLE_CONSTRAINT_NAME,
    SQL_TABLE_CONSTRAINT_REFERENCES_COLUMNS,
    SQL_TABLE_CONSTRAINT_REFERENCES_NAME,
    SQL_TABLE_CONSTRAINT_TYPE,
    SQL_TEMP_NAME,
    SQL_TEMP_TYPE,
    SQL_TIME_TYPE_PRECISION,
    SQL_TIME_TYPE_WITH_TIMEZONE,
    SQL_TYPENAME_ARRAY,
    SQL_TYPENAME_SETOF,
    SQL_TYPENAME_TYPE,
    SQL_TYPECAST_TYPE,
    SQL_TYPECAST_VALUE,
    SQL_TYPETEST_NEGATE,
    SQL_TYPETEST_TYPES,
    SQL_TYPETEST_VALUE,
    SQL_VIEW_COLUMNS,
    SQL_VIEW_NAME,
    SQL_VIEW_STATEMENT,
    SQL_VIEW_TEMP,
    SQL_WINDOW_BOUND_DIRECTION,
    SQL_WINDOW_BOUND_MODE,
    SQL_WINDOW_BOUND_VALUE,
    SQL_WINDOW_DEF_FRAME,
    SQL_WINDOW_DEF_NAME,
    SQL_WINDOW_FRAME_BOUNDS,
    SQL_WINDOW_FRAME_EXCLUDE,
    SQL_WINDOW_FRAME_MODE,
    SQL_WINDOW_FRAME_NAME,
    SQL_WINDOW_FRAME_ORDER,
    SQL_WINDOW_FRAME_PARTITION,

    FSON_DYNAMIC_KEYS_,
    // Dictionary encoded from here
}

enum StatementType: uint8 {
    NONE,
    CREATE_TABLE,
    CREATE_TABLE_AS,
    CREATE_VIEW,
    SELECT,
    SELECT_INTO,
    SET,
}

struct Node {
    location: Location;
    node_type: NodeType = NONE;
    attribute_key: uint16 = 0;
    parent: uint32 = 0;
    children_begin_or_value: uint32 = 0;
    children_count: uint32 = 0;
}

table Error {
    location: Location;
    message: string;
}

table Statement {
    statement_type: StatementType;
    root_node: uint32;
    name_qualified: string;
    name_pretty: string;
}

enum DependencyType: uint8 {
    TABLE_REF,
    COLUMN_REF
}

struct Dependency {
    type: DependencyType;
    source_statement: uint32;
    target_statement: uint32;
    target_node: uint32;
}

enum HighlightingTokenType: uint8 {
    NONE,
    KEYWORD,
    LITERAL_INTEGER,
    LITERAL_FLOAT,
    LITERAL_STRING,
    LITERAL_BINARY,
    LITERAL_HEX,
    LITERAL_BOOLEAN,
    OPERATOR,
    IDENTIFIER,
    COMMENT,
    FSON_KEY,
}

table Highlighting {
    token_offsets: [uint32];
    token_types: [HighlightingTokenType];
    token_breaks: [uint32];
}

table Program {
    nodes: [Node];
    statements: [Statement];
    errors: [Error];
    line_breaks: [Location];
    comments: [Location];
    fson_keys: [Location];
    dependencies: [Dependency];
    highlighting: Highlighting;
}
