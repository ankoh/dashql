syntax = "proto3";

package sqlynx.compute;

message OrderByConstraint {
    /// The field name
    string field_name = 1;
    /// Sort ascending?
    bool ascending = 2;
    /// Sort nulls first?
    bool nulls_first = 3;
}

message OrderByConfig {
    /// The field name
    repeated OrderByConstraint constraints = 1;
    /// Limit results?
    optional uint32 limit = 2;
}

enum AggregationFunction {
    Min = 0;
    Max = 1;
    Average = 2;
    Count = 3;
    CountStar = 4;
    CountDistinct = 5;
}

message GroupByKey {
    /// The field name
    string field_name = 1;
    /// The output alias
    string output_alias = 2;

    /// The field containing the precomputed minimum of the field
    string stats_minimum_field_name = 3;
    /// The field containing the precomputed binning width.
    /// Bins are computed as: (data[field_name] - stats[binning_min_field_name]) / stats[binning_width_field_name])
    string stats_bin_width_field_name = 4;
}

message GroupByAggregate {
    /// The field name
    string field_name = 1;
    /// The output alias
    string output_alias = 2;
    /// The aggregation function
    AggregationFunction aggregation_function = 3;
    /// Instead of aggregating the value, we're aggregating the value lengths (list & string)
    bool aggregate_lengths = 4;
}

message GroupByConfig {
    /// The group by keys
    repeated GroupByKey keys = 1;
    /// The aggregates
    repeated GroupByAggregate aggregates = 2;
}
