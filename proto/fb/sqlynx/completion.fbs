include "sqlynx/parsed_script.fbs";

namespace sqlynx.proto;

enum CompletionCandidateObjectType: uint8 {
    NONE = 0,
    DATABASE = 1,
    SCHEMA = 2,
    TABLE = 3,
    COLUMN = 4
}

table CompletionCandidateObject {
    /// The object type
    object_type: CompletionCandidateObjectType;
    /// The database id (unique in catalog)
    catalog_database_id: uint32;
    /// The schema id (unique in catalog)
    catalog_schema_id: uint32;
    /// The table id (unique in catalog)
    catalog_table_id: uint64;
    /// The column idx
    table_column_id: uint32;
    /// The candidate tags
    candidate_tags: uint8;
    /// The score
    score: uint32;

}

enum CandidateTag: uint16 {
    NONE = 0,
    EXPECTED_PARSER_SYMBOL = 1,
    NAME_INDEX = 2,
    DOT_RESOLUTION_DATABASE = 4,
    DOT_RESOLUTION_SCHEMA = 8,
    DOT_RESOLUTION_TABLE = 16,
    DOT_RESOLUTION_COLUMN = 32,
    PREFIX_MATCH = 64,
    SUBSTRING_MATCH = 128,
    RESOLVING_TABLE = 256,
    UNRESOLVED_PEER = 512,
    THROUGH_CATALOG = 1024,
}

table CompletionCandidate {
    /// The fine-granular candidate tags
    candidate_tags: uint8;
    /// The coarse-granular analyzer tags
    name_tags: uint8;
    /// The display text
    display_text: string;
    /// The completion text, when selected
    completion_text: string;
    /// The text to replace when completing
    replace_text_at: Location;
    /// The objects that this candidate references
    catalog_objects: [CompletionCandidateObject];
    /// The score
    score: uint32;
}

enum CompletionStrategy: uint8 {
    DEFAULT,
    TABLE_REF,
    COLUMN_REF
}

table Completion {
    /// The text offset
    text_offset: uint32;
    /// The strategy
    strategy: CompletionStrategy;
    /// The completion candidates
    candidates: [CompletionCandidate];
}
